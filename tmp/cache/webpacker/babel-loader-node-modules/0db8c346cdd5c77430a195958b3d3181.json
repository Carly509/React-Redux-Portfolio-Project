{"ast":null,"code":"var _jsxFileName = \"/home/noukod/Downloads/react-rails-crud-app-master/app/javascript/components/EventList.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/* eslint-disable camelcase */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nvar EventList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventList, _React$Component);\n\n  function EventList(props) {\n    var _this;\n\n    _classCallCheck(this, EventList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventList).call(this, props));\n    _this.state = {\n      searchTerm: ''\n    };\n    _this.searchInput = React.createRef();\n    _this.updateSearchTerm = _this.updateSearchTerm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EventList, [{\n    key: \"updateSearchTerm\",\n    value: function updateSearchTerm() {\n      this.setState({\n        searchTerm: this.searchInput.current.value\n      });\n    }\n  }, {\n    key: \"matchSearchTerm\",\n    value: function matchSearchTerm(obj) {\n      var id = obj.id,\n          published = obj.published,\n          created_at = obj.created_at,\n          updated_at = obj.updated_at,\n          rest = _objectWithoutProperties(obj, [\"id\", \"published\", \"created_at\", \"updated_at\"]);\n\n      var searchTerm = this.state.searchTerm;\n      return Object.values(rest).some(function (value) {\n        return value.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n      });\n    }\n  }, {\n    key: \"renderEvents\",\n    value: function renderEvents() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          activeId = _this$props.activeId,\n          events = _this$props.events;\n      var filteredEvents = events.filter(function (el) {\n        return _this2.matchSearchTerm(el);\n      }).sort(function (a, b) {\n        return new Date(b.event_date) - new Date(a.event_date);\n      });\n      return filteredEvents.map(function (event) {\n        return React.createElement(\"li\", {\n          key: event.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/events/\".concat(event.id),\n          className: activeId === event.id ? 'active' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, event.event_date, ' - ', event.event_type));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        className: \"eventList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Events\", React.createElement(Link, {\n        to: \"/events/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"New Event\")), React.createElement(\"input\", {\n        className: \"search\",\n        placeholder: \"Search\",\n        type: \"text\",\n        ref: this.searchInput,\n        onKeyUp: this.updateSearchTerm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.renderEvents()));\n    }\n  }]);\n\n  return EventList;\n}(React.Component);\n\nEventList.propTypes = {\n  activeId: PropTypes.number,\n  events: PropTypes.arrayOf(PropTypes.object)\n};\nEventList.defaultProps = {\n  activeId: undefined,\n  events: []\n};\nexport default EventList;","map":{"version":3,"sources":["/home/noukod/Downloads/react-rails-crud-app-master/app/javascript/components/EventList.js"],"names":["React","Link","PropTypes","EventList","props","state","searchTerm","searchInput","createRef","updateSearchTerm","bind","setState","current","value","obj","id","published","created_at","updated_at","rest","Object","values","some","toLowerCase","indexOf","activeId","events","filteredEvents","filter","el","matchSearchTerm","sort","a","b","Date","event_date","map","event","event_type","renderEvents","Component","propTypes","number","arrayOf","object","defaultProps","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass EventList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n    };\n\n    this.searchInput = React.createRef();\n    this.updateSearchTerm = this.updateSearchTerm.bind(this);\n  }\n\n  updateSearchTerm() {\n    this.setState({ searchTerm: this.searchInput.current.value });\n  }\n\n  matchSearchTerm(obj) {\n    const {\n      id, published, created_at, updated_at, ...rest\n    } = obj;\n    const { searchTerm } = this.state;\n\n    return Object.values(rest).some(\n      value => value.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1,\n    );\n  }\n\n  renderEvents() {\n    const { activeId, events } = this.props;\n    const filteredEvents = events\n      .filter(el => this.matchSearchTerm(el))\n      .sort((a, b) => new Date(b.event_date) - new Date(a.event_date));\n\n    return filteredEvents.map(event => (\n      <li key={event.id}>\n        <Link to={`/events/${event.id}`} className={activeId === event.id ? 'active' : ''}>\n          {event.event_date}\n          {' - '}\n          {event.event_type}\n        </Link>\n      </li>\n    ));\n  }\n\n  render() {\n    return (\n      <section className=\"eventList\">\n        <h2>\n        Events\n          <Link to=\"/events/new\">New Event</Link>\n        </h2>\n\n        <input\n          className=\"search\"\n          placeholder=\"Search\"\n          type=\"text\"\n          ref={this.searchInput}\n          onKeyUp={this.updateSearchTerm}\n        />\n\n        <ul>{this.renderEvents()}</ul>\n      </section>\n    );\n  }\n}\n\nEventList.propTypes = {\n  activeId: PropTypes.number,\n  events: PropTypes.arrayOf(PropTypes.object),\n};\n\nEventList.defaultProps = {\n  activeId: undefined,\n  events: [],\n};\n\nexport default EventList;\n"]},"metadata":{},"sourceType":"module"}