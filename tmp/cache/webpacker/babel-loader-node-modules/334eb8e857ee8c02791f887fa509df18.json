{"ast":null,"code":"var _jsxFileName = \"/home/noukod/Downloads/react-rails-crud-app-master/app/javascript/components/EventForm.js\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Pikaday from 'pikaday';\nimport { Link } from 'react-router-dom';\nimport { formatDate, isEmptyObject, validateEvent } from '../helpers/helpers';\nimport EventNotFound from './EventNotFound';\nimport 'pikaday/css/pikaday.css';\n\nvar EventForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventForm, _React$Component);\n\n  function EventForm(props) {\n    var _this;\n\n    _classCallCheck(this, EventForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventForm).call(this, props));\n    _this.state = {\n      event: props.event,\n      errors: {}\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.dateInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(EventForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      /* eslint-disable no-new */\n      new Pikaday({\n        field: this.dateInput.current,\n        toString: function toString(date) {\n          return formatDate(date);\n        },\n        onSelect: function onSelect(date) {\n          var formattedDate = formatDate(date);\n          _this2.dateInput.current.value = formattedDate;\n\n          _this2.updateEvent('event_date', formattedDate);\n        }\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var event = _ref.event;\n      this.setState({\n        event: event\n      });\n    }\n  }, {\n    key: \"updateEvent\",\n    value: function updateEvent(key, value) {\n      this.setState(function (prevState) {\n        return {\n          event: _objectSpread({}, prevState.event, _defineProperty({}, key, value))\n        };\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var event = this.state.event;\n      var errors = validateEvent(event);\n\n      if (!isEmptyObject(errors)) {\n        this.setState({\n          errors: errors\n        });\n      } else {\n        var onSubmit = this.props.onSubmit;\n        onSubmit(event);\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      this.updateEvent(name, value);\n    }\n  }, {\n    key: \"renderErrors\",\n    value: function renderErrors() {\n      var errors = this.state.errors;\n\n      if (isEmptyObject(errors)) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"errors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"The following errors prohibited the event from being saved:\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, Object.values(errors).map(function (error) {\n        return React.createElement(\"li\", {\n          key: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, error);\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var event = this.state.event;\n      var path = this.props.path;\n      if (!event.id && path === '/events/:id/edit') return React.createElement(EventNotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n      var cancelURL = event.id ? \"/events/\".concat(event.id) : '/events';\n      var title = event.id ? \"\".concat(event.event_date, \" - \").concat(event.event_type) : 'New Event';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, title), this.renderErrors(), React.createElement(\"form\", {\n        className: \"eventForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"event_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Type:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"event_type\",\n        name: \"event_type\",\n        onChange: this.handleInputChange,\n        value: event.event_type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"event_date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Date:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"event_date\",\n        name: \"event_date\",\n        ref: this.dateInput,\n        autoComplete: \"off\",\n        value: event.event_date,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Title:\"), React.createElement(\"textarea\", {\n        cols: \"30\",\n        rows: \"10\",\n        id: \"title\",\n        name: \"title\",\n        onChange: this.handleInputChange,\n        value: event.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"speaker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Speakers:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"speaker\",\n        name: \"speaker\",\n        onChange: this.handleInputChange,\n        value: event.speaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"host\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Hosts:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"host\",\n        name: \"host\",\n        onChange: this.handleInputChange,\n        value: event.host,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"published\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Publish:\"), React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"published\",\n        name: \"published\",\n        onChange: this.handleInputChange,\n        checked: event.published,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: cancelURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return EventForm;\n}(React.Component);\n\nEventForm.propTypes = {\n  event: PropTypes.shape(),\n  onSubmit: PropTypes.func.isRequired,\n  path: PropTypes.string.isRequired\n};\nEventForm.defaultProps = {\n  event: {\n    event_type: '',\n    event_date: '',\n    title: '',\n    speaker: '',\n    host: '',\n    published: false\n  }\n};\nexport default EventForm;","map":{"version":3,"sources":["/home/noukod/Downloads/react-rails-crud-app-master/app/javascript/components/EventForm.js"],"names":["React","PropTypes","Pikaday","Link","formatDate","isEmptyObject","validateEvent","EventNotFound","EventForm","props","state","event","errors","handleSubmit","bind","handleInputChange","dateInput","createRef","field","current","toString","date","onSelect","formattedDate","value","updateEvent","setState","key","prevState","e","preventDefault","onSubmit","target","name","type","checked","Object","values","map","error","path","id","cancelURL","title","event_date","event_type","renderErrors","speaker","host","published","Component","propTypes","shape","func","isRequired","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pikaday from 'pikaday';\nimport { Link } from 'react-router-dom';\nimport { formatDate, isEmptyObject, validateEvent } from '../helpers/helpers';\nimport EventNotFound from './EventNotFound';\nimport 'pikaday/css/pikaday.css';\n\nclass EventForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      event: props.event,\n      errors: {},\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.dateInput = React.createRef();\n  }\n\n  componentDidMount() {\n    /* eslint-disable no-new */\n    new Pikaday({\n      field: this.dateInput.current,\n      toString: date => formatDate(date),\n      onSelect: (date) => {\n        const formattedDate = formatDate(date);\n        this.dateInput.current.value = formattedDate;\n        this.updateEvent('event_date', formattedDate);\n      },\n    });\n  }\n\n  componentWillReceiveProps({ event }) {\n    this.setState({ event });\n  }\n\n  updateEvent(key, value) {\n    this.setState(prevState => ({\n      event: {\n        ...prevState.event,\n        [key]: value,\n      },\n    }));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { event } = this.state;\n    const errors = validateEvent(event);\n\n    if (!isEmptyObject(errors)) {\n      this.setState({ errors });\n    } else {\n      const { onSubmit } = this.props;\n      onSubmit(event);\n    }\n  }\n\n  handleInputChange(event) {\n    const { target } = event;\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.updateEvent(name, value);\n  }\n\n  renderErrors() {\n    const { errors } = this.state;\n\n    if (isEmptyObject(errors)) {\n      return null;\n    }\n\n    return (\n      <div className=\"errors\">\n        <h3>The following errors prohibited the event from being saved:</h3>\n        <ul>\n          {Object.values(errors).map(error => (\n            <li key={error}>{error}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    const { event } = this.state;\n    const { path } = this.props;\n\n    if (!event.id && path === '/events/:id/edit') return <EventNotFound />;\n\n    const cancelURL = event.id ? `/events/${event.id}` : '/events';\n    const title = event.id ? `${event.event_date} - ${event.event_type}` : 'New Event';\n\n    return (\n      <div>\n        <h2>{title}</h2>\n\n        {this.renderErrors()}\n\n        <form className=\"eventForm\" onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"event_type\">\n              <strong>Type:</strong>\n              <input\n                type=\"text\"\n                id=\"event_type\"\n                name=\"event_type\"\n                onChange={this.handleInputChange}\n                value={event.event_type}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"event_date\">\n              <strong>Date:</strong>\n              <input\n                type=\"text\"\n                id=\"event_date\"\n                name=\"event_date\"\n                ref={this.dateInput}\n                autoComplete=\"off\"\n                value={event.event_date}\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"title\">\n              <strong>Title:</strong>\n              <textarea\n                cols=\"30\"\n                rows=\"10\"\n                id=\"title\"\n                name=\"title\"\n                onChange={this.handleInputChange}\n                value={event.title}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"speaker\">\n              <strong>Speakers:</strong>\n              <input\n                type=\"text\"\n                id=\"speaker\"\n                name=\"speaker\"\n                onChange={this.handleInputChange}\n                value={event.speaker}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"host\">\n              <strong>Hosts:</strong>\n              <input\n                type=\"text\"\n                id=\"host\"\n                name=\"host\"\n                onChange={this.handleInputChange}\n                value={event.host}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"published\">\n              <strong>Publish:</strong>\n              <input\n                type=\"checkbox\"\n                id=\"published\"\n                name=\"published\"\n                onChange={this.handleInputChange}\n                checked={event.published}\n              />\n            </label>\n          </div>\n          <div className=\"form-actions\">\n            <button type=\"submit\">Save</button>\n            <Link to={cancelURL}>Cancel</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nEventForm.propTypes = {\n  event: PropTypes.shape(),\n  onSubmit: PropTypes.func.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nEventForm.defaultProps = {\n  event: {\n    event_type: '',\n    event_date: '',\n    title: '',\n    speaker: '',\n    host: '',\n    published: false,\n  },\n};\n\nexport default EventForm;\n"]},"metadata":{},"sourceType":"module"}